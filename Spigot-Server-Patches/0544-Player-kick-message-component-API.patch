From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aleksander Jagiello <themolkapl@gmail.com>
Date: Sat, 11 Jul 2020 22:44:27 +0200
Subject: [PATCH] Player kick message component API


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index cf83059fec9f11df992827f0c0249243caa9ac33..1b044323d358802aa80ff22395c0fa913b2f22a0 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -259,18 +259,30 @@ public class PlayerConnection implements PacketListenerPlayIn {
     // CraftBukkit start
     @Deprecated
     public void disconnect(IChatBaseComponent ichatbasecomponent) {
-        disconnect(CraftChatMessage.fromComponent(ichatbasecomponent));
+        // Paper - replace with components
+        String json = IChatBaseComponent.ChatSerializer.componentToJson(ichatbasecomponent);
+        disconnect(net.md_5.bungee.chat.ComponentSerializer.parse(json));
+        // Paper end
     }
     // CraftBukkit end
 
+    // Paper start - declare and delegate old method
     public void disconnect(String s) {
+        disconnect(net.md_5.bungee.api.chat.TextComponent.fromLegacyText(s != null ? s : ""));
+    }
+    // Paper end
+
+    public void disconnect(net.md_5.bungee.api.chat.BaseComponent[] message) { // Paper - replace with components
         // CraftBukkit start - fire PlayerKickEvent
         if (this.processedDisconnect) {
             return;
         }
-        String leaveMessage = EnumChatFormat.YELLOW + this.player.getName() + " left the game.";
 
-        PlayerKickEvent event = new PlayerKickEvent(this.server.getPlayer(this.player), s, leaveMessage);
+        // Paper start - construct components
+        net.md_5.bungee.api.chat.BaseComponent leaveMessage = new net.md_5.bungee.api.chat.TranslatableComponent("multiplayer.player.left", this.player.getName());
+        leaveMessage.setColor(net.md_5.bungee.api.ChatColor.YELLOW);
+        PlayerKickEvent event = new PlayerKickEvent(this.server.getPlayer(this.player), message, new net.md_5.bungee.api.chat.BaseComponent[] {leaveMessage});
+        // Paper end
 
         if (this.server.getServer().isRunning()) {
             this.server.getPluginManager().callEvent(event);
@@ -281,9 +293,12 @@ public class PlayerConnection implements PacketListenerPlayIn {
             return;
         }
         // Send the possibly modified leave message
-        s = event.getReason();
         // CraftBukkit end
-        final ChatComponentText ichatbasecomponent = new ChatComponentText(s);
+
+        // Paper start - construct NMS component
+        final String json = net.md_5.bungee.chat.ComponentSerializer.toString(event.getReasonComponents());
+        final IChatBaseComponent ichatbasecomponent = IChatBaseComponent.ChatSerializer.jsonToComponent(json);
+        // Paper end
 
         this.networkManager.sendPacket(new PacketPlayOutKickDisconnect(ichatbasecomponent), (future) -> {
             this.networkManager.close(ichatbasecomponent);
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index b832ece4948323e60fabecdeee5c9051b65c5e8e..6431a33a9a317924021d38c436ce2df044cdc3c4 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -435,11 +435,25 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
     @Override
     public void kickPlayer(String message) {
+        kickPlayer(net.md_5.bungee.api.chat.TextComponent.fromLegacyText(message != null ? message : "")); // Paper - delegate
+    }
+
+    // Paper start - implement kick components
+    @Override
+    public void kickPlayer(BaseComponent message) {
+        Validate.notNull(message, "message");
+        kickPlayer(new BaseComponent[]{message});
+    }
+
+    @Override
+    public void kickPlayer(BaseComponent... message) {
+        Validate.notNull(message, "message");
         org.spigotmc.AsyncCatcher.catchOp("player kick"); // Spigot
         if (getHandle().playerConnection == null) return;
 
-        getHandle().playerConnection.disconnect(message == null ? "" : message);
+        getHandle().playerConnection.disconnect(message);
     }
+    // Paper end
 
     @Override
     public void setCompassTarget(Location loc) {
